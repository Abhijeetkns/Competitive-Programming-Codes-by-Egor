14 FoxAndNecklace
8 possible
16 java.lang.String
4
5 int[]
5 value
3 int
1 k
3 int
10 minimalSum
4 long
1 d
8
0
4
int[] 4
1
100
100
100
int 3
int 250
long 2
String
10 Impossible
1
1
4
int[] 4
1
100
100
100
int 3
int 201
long 4
String
8 Possible
1
2
4
int[] 4
1
1
1
1
int 4
int 1
long 2
String
8 Possible
1
3
4
int[] 7
1
10
100
1000
10000
100000
1000000
int 5
int 1010101
long 168
String
8 Possible
1
4
4
int[] 20
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
int 10
int 100
long 22054032001
String
10 Impossible
1
5
4
int[] 20
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
int 10
int 100
long 22054032000
String
8 Possible
1
6
4
int[] 75
971502
812126
778705
721377
499254
463369
292920
126812
122666
93575
86718
86507
76190
54741
45291
44666
25315
14700
6027
5988
5843
5304
5147
5076
3753
3563
2955
1850
946
924
884
558
453
315
299
215
97
89
84
83
66
52
51
49
38
23
20
10
9
9
9
9
8
8
8
8
5
5
3
3
3
1
1
1
1
1
1
1
1
1
1
1
1
1
1
int 9
int 3065211
long 999990492481
-1
1
7
4
int[] 80
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
int 13
int 1
long 1000000000000
String
8 Possible
1
10 2017.09.09
28 2017 TopCoder Open Algorithm
0
81 on2017_09.on2017_09_09_2017_TopCoder_Open_Algorithm.FoxAndNecklace.FoxAndNecklace
1
4 256M
